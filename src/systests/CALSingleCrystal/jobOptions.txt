// $Header: /nfs/slac/g/glast/ground/cvs/Gleam/src/systests/CALSingleCrystal/jobOptions.txt,v 1.3 2002/10/15 22:59:44 kyoung Exp $
//##############################################################
//
// primary DLLs, including auditor 

ApplicationMgr.DLLs+= { "GaudiAlg", "GaudiAud"};
ApplicationMgr.ExtSvc += {"ChronoStatSvc"};
AuditorSvc.Auditors = {"ChronoAuditor"};

// ----------------------------
// setup basic event loop stuff
//
ApplicationMgr.ExtSvc = { 
    "GlastEventSelector/EventSelector" , 
    "EventCnvSvc"
    };

EventPersistencySvc.CnvServices = {"EventCnvSvc"};
EventSelector.Input = "NONE";


// ----------------------------
//  a structure for the topalg, using sequencer steps

ApplicationMgr.TopAlg = {
      "Sequencer/Top" };

//the top sequence loop
Top.Members={
    "Sequencer/Generator",
    "Sequencer/Digitization",
    "Sequencer/EventDisplay",
    "Sequencer/Triggered" };


// the sequence that is triggered
Triggered.Members={
    "TriggerAlg",
    "Sequencer/Reconstruction",
    "Sequencer/RecoDisplay",
    "Sequencer/Output" };

// ----------------------------
//  Geometry definition
//
ApplicationMgr.DLLs += {"GlastSvc"};
ApplicationMgr.ExtSvc += { "GlastDetSvc"};
// select one of the following 
// GlastDetSvc.topVolume="LAT"; 
GlastDetSvc.topVolume="CsIElement";  // to look at a single full crystal
//GlastDetSvc.topVolume="CALLayer";
//GlastDetSvc.topVolume="CALLayers";
//GlastDetSvc.topVolume="oneTower";
//GlastDetSvc.topVolume="trayReg";
//GlastDetSvc.topVolume="trayBot";

GlastDetSvc.xmlfile="$(XMLGEODBSROOT)/xml/flight/flightSegVols.xml";
GlastDetSvc.visitorMode="recon";

// ----------------------------
//  Randoms definition
//
ApplicationMgr.ExtSvc += { "GlastRandomSvc"};

// ----------------------------
//  Generation or input
//
ApplicationMgr.DLLs +={ "G4Generator"};
Generator.Members = {"FluxAlg", "G4Generator"};
G4Generator.defaultCutValue=0.7; // instead of 0.1 default

#include "$FLUXSVCROOT/src/defaultOptions.txt"

// Append (or replace) the list of source library documents
FluxSvc.source_lib = {"$(GLEAMROOT)/src/systests/test_sources.xml"};
FluxAlg.source_name="electron_patch_SingleCDE";

// ----------------------------
//  Digitization
//
ApplicationMgr.DLLs +={"CalDigi"};
Digitization.Members = {"CalDigiAlg"};


// ----------------------------
//  Trigger calculation
//
ApplicationMgr.DLLs +={ "Trigger"};
Trigger.Members = {"TriggerAlg"};
TriggerAlg.mask = 0; // all bits on by default

// ----------------------------
//   Reconstruction
//
ApplicationMgr.DLLs +={ 
    "Recon",
    "CalRecon"
    };
Reconstruction.Members={ 
      "Sequencer/Cal1",
      "Sequencer/Cal2"
      };
         
ApplicationMgr.ExtSvc += {"RecoSvc"};

Cal1.Members = { 
      "CalXtalRecAlg", 
      "CalClustersAlg/first"
      };

Cal2.Members = {
      "CalClustersAlg/second"
      };

CalDigiAlg.taperToolName = "OnePlusExpTaper";

// ----------------------------
//   Output
//
ApplicationMgr.DLLs +={ 
    "RootIo"
}; 
Output.Members += {"mcRootWriterAlg", "digiRootWriterAlg", "reconRootWriterAlg"};
mcRootWriterAlg.OutputLevel=3;
digiRootWriterAlg.OutputLevel=3;
reconRootWriterAlg.OutputLevel=3;
     
// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel = 3;
ToolSvc.OutputLevel=4;    // too verbose in debug

// ApplicationMgr.HistogramPersistency = "ROOT";

// Output root histogram files for mc, digi, and recon
mcRootWriterAlg.mcRootFile = "mc.root";
digiRootWriterAlg.digiRootFile = "digi.root";
reconRootWriterAlg.reconRootFile = "recon.root";

// Number of events to process
ApplicationMgr.EvtMax = 5000;

// Random Seed initialization
GlastRandomSvc.RunNumber = 50;
GlastRandomSvc.InitialSequenceNumber = 0;

//==============================================================
//
// End of job options file
//
//##############################################################



//##############################################################
//
// basic Job options file for a Gleam execution
// $Header: /nfs/slac/g/glast/ground/cvs/Gleam/src/basicOptions.txt,v 1.54 2004/10/13 05:58:22 lsrea Exp $

// primary DLLs, including auditor 

ApplicationMgr.DLLs+= { "GaudiAlg", "GaudiAud"};
ApplicationMgr.ExtSvc += {"ChronoStatSvc"};
AuditorSvc.Auditors = {"ChronoAuditor"};

// ----------------------------
// setup basic event loop stuff
//
ApplicationMgr.ExtSvc = { 
    "GlastEventSelector/EventSelector" , 
    "EventCnvSvc"
    };

EventPersistencySvc.CnvServices = {"EventCnvSvc"};
EventSelector.Input = "NONE";


// ----------------------------
//  a structure for the topalg, using sequencer steps

ApplicationMgr.TopAlg = {
      "Sequencer/Top" };

//the top sequence loop
Top.Members={
    "Sequencer/Generator",
    "Sequencer/CalibrationUpdate",
    "Sequencer/Digitization",
    "Sequencer/EventDisplay",
    "Sequencer/Triggered" };

// the sequence that is triggered
Triggered.Members={
    "Sequencer/Trigger",
    "Sequencer/Reconstruction",
    "Sequencer/RecoDisplay",
    "Sequencer/Output" };

// ----------------------------
//  Geometry definition
//
ApplicationMgr.DLLs += {"GlastSvc"};
ApplicationMgr.ExtSvc += { "GlastDetSvc"};
GlastDetSvc.topVolume="LAT"; 
GlastDetSvc.xmlfile="$(XMLGEODBSROOT)/xml/flight/flightSegVols.xml";
GlastDetSvc.visitorMode="recon";

// ----------------------------
//  Randoms definition
//
ApplicationMgr.ExtSvc += { "GlastRandomSvc"};

// ----------------------------
//  Generation or input
//
ApplicationMgr.DLLs +={ "G4Generator","G4Propagator"};
ApplicationMgr.ExtSvc += {"G4GeometrySvc"};
Generator.Members = {"FluxAlg", "G4Generator", "ExposureAlg"};
G4Generator.defaultCutValue=0.7; 
G4Generator.defaultTkrCutValue=0.1;
G4Generator.defaultCalCutValue=0.7;

#include "$FLUXSVCROOT/src/defaultOptions.txt"

// Append (or replace) the list of source library documents
FluxSvc.source_lib += {"$(G4GENERATORROOT)/src/test/test_sources.xml"};
FluxAlg.source_name="muon_pencil_angle";

// add in CRflux option
ApplicationMgr.DLLs +={ "CRflux" };
FluxSvc.source_lib += {
    "$(CRFLUXROOT)/xml/source_library.xml"};

//-----------------------------
// These algorithms run before digitization or reconstruction
//
CalibrationUpdate.Members={
    "TkrCalibAlg"     // found in TkrUtil
    };


// ----------------------------
//  Digitization
//
ApplicationMgr.DLLs +={ "TkrDigi", "CalDigi", "AcdDigi"  };
Digitization.Members = { 
    "TkrDigiAlg", 
    "CalDigiAlg", 
    "AcdDigiAlg"
    };


// ----------------------------
//  Trigger calculation
//
ApplicationMgr.DLLs +={ "Trigger"};
Trigger.Members = {"TriggerAlg"};
TriggerAlg.mask = -1; // all bits on by default: reject if none set (e.g., missed)

// ----------------------------
//  onboard filter 
//
ApplicationMgr.DLLs += {"EbfWriter", "OnboardFilter"};
Trigger.Members += {"EbfWriter", "OnboardFilter"};
Triggered.Members += {"FilterTracks","FilterAlg"};
OnboardFilter.mask=0; // all bits off by default: no rejection

// ----------------------------
//   Reconstruction
//
ApplicationMgr.ExtSvc += { "GlastPropagatorSvc" };

ApplicationMgr.DLLs +={ 
    "CalibSvc",
    "CalRecon", "CalUtil", "TkrUtil",
    "TkrRecon"
    };
Reconstruction.Members={ 
    "Sequencer/Cal1", 
    "Sequencer/Tkr",
    "Sequencer/Cal2",
    "Sequencer/TkrIter",
    "Sequencer/Acd"
    };
         
//          tracker
// -------------------------------------------
ApplicationMgr.ExtSvc   += { "TkrGeometrySvc"};
ApplicationMgr.ExtSvc   += { "TkrInitSvc"};


// Start up a CalibDataSvc 
ApplicationMgr.ExtSvc += {"CalibDataSvc"};

ApplicationMgr.ExtSvc += {"CalibMySQLCnvSvc", "CalibXmlCnvSvc" };

DetectorPersistencySvc.CnvServices += {"CalibMySQLCnvSvc"};
DetectorPersistencySvc.CnvServices += {"CalibXmlCnvSvc"};

// CalibDataSvc properties 
// Storage type of 14 corresponds to MYSQL
CalibDataSvc.CalibInstrumentName = "LAT";
CalibDataSvc.CalibStorageType = 14;
CalibDataSvc.CalibRootName = "Calib";
CalibDataSvc.CalibFlavorList = {"ideal"};


Cal1.Members = { 
    "CalXtalRecAlg", 
    "CalClustersAlg/first"
    };
Tkr.Members = {
    "TkrReconAlg/FirstPass"
    };
Cal2.Members = {
    "CalClustersAlg/second"
    };
TkrIter.Members = {
    "TkrReconAlg/Iteration"
    };
second.OutputLevel=5;  // since this guy generates INFO lines
// ----------------------------
//   ACD recon
//
ApplicationMgr.DLLs += {"AcdRecon"};
Acd.Members = {"AcdReconAlg"};

// ----------------------------
//   Atwood's tuple and merit
//
ApplicationMgr.DLLs += {"AnalysisNtuple", "ntupleWriterSvc", "merit"};
ApplicationMgr.ExtSvc += {"RootTupleSvc"};
Triggered.Members += { "meritAlg" };
//-------------------------------------
// Merit configuration
MeritAlg.IM_filename=""; // disable IM variable
MeritAlg.cuts="LnA";     // no test for tail suppression


// ---------------------------- 
//   Output
//
ApplicationMgr.DLLs +={   "RootIo"}; 
Output.Members = {"mcRootWriterAlg", "digiRootWriterAlg", "reconRootWriterAlg"};

 // output levels, including suppression to allow debug, info
mcRootWriterAlg.OutputLevel=3;
digiRootWriterAlg.OutputLevel=3;
reconRootWriterAlg.OutputLevel=3;
ToolSvc.OutputLevel=3;    // too verbose in debug
CalClustersAlg.OutputLevel=4; // too much info
TkrClusFirst.OutputLevel=4;
CalDigiAlg.OutputLevel=4;
TkrAlignmentSvc.OutputLevel=4;
TkrGeometrySvc.OutputLevel=4;
EbfWriter.OutputLevel=4;
ToolSvc.LastLayerCorrTool.OutputLevel=4; 
ToolSvc.OutputLevel=4;
CalXtalRecAlg.OutputLevel=4;
    
// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel = 3;

//==============================================================
//
// End of job options file
//
//##############################################################


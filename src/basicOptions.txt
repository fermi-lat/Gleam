//##############################################################
//
// basic Job options file for a Gleam execution
// $Header: /nfs/slac/g/glast/ground/cvs/Gleam/src/basicOptions.txt,v 1.21 2002/08/29 20:37:46 srobinsn Exp $

// primary DLLs

ApplicationMgr.DLLs+= { "GaudiAlg"};

// ----------------------------
// setup basic event loop stuff
//
ApplicationMgr.ExtSvc = { 
    "GlastEventSelector/EventSelector" , 
    "EventCnvSvc"
    };

EventPersistencySvc.CnvServices = {"EventCnvSvc"};
EventSelector.Input = "NONE";

ApplicationMgr.ExtSvc += {"ChronoStatSvc"};

// ----------------------------
//  a structure for the topalg, using sequencer steps

ApplicationMgr.TopAlg = {
      "Sequencer/Top" };

//the top sequence loop
Top.Members={
    "Sequencer/Generator",
    "Sequencer/Digitization",
    "Sequencer/EventDisplay",
    "Sequencer/Triggered" };


// the sequence that is triggered
Triggered.Members={
    "TriggerAlg",
    "Sequencer/Reconstruction",
    "Sequencer/RecoDisplay",
    "Sequencer/Output" };

// ----------------------------
//  Geometry definition
//
ApplicationMgr.DLLs += {"GlastSvc"};
ApplicationMgr.ExtSvc += { "GlastDetSvc"};
// select one of the following 
GlastDetSvc.topVolume="LAT"; 
//GlastDetSvc.topVolume="CsIElement";  // to look at a single full crystal
//GlastDetSvc.topVolume="CALLayer";
//GlastDetSvc.topVolume="CALLayers";
//GlastDetSvc.topVolume="oneTower";
//GlastDetSvc.topVolume="trayReg";
//GlastDetSvc.topVolume="trayBot";

GlastDetSvc.xmlfile="$(XMLGEODBSROOT)/xml/flight/flightSegVols.xml";
GlastDetSvc.visitorMode="recon";

// ----------------------------
//  Generation or input
//
ApplicationMgr.DLLs +={ "G4Generator"};
Generator.Members = {"FluxAlg", "G4Generator"};
Generator.BranchMembers = {"FluxAlg","ExposureAlg"};
#include "$FLUXSVCROOT/src/defaultOptions.txt"

// Append (or replace) the list of source library documents
FluxSvc.source_lib += {"$(G4GENERATORROOT)/src/test/test_sources.xml"};
FluxAlg.source_name="muon_pencil_angle";


// ----------------------------
//  Digitization
//
ApplicationMgr.DLLs +={ "TkrDigi", "CalDigi", "AcdDigi"  };
Digitization.Members = { 
    "TkrSimpleDigiAlg", 
    "CalDigiAlg", 
    "AcdDigiAlg"};


// ----------------------------
//  Trigger calculation
//
ApplicationMgr.DLLs +={ "Trigger"};
Trigger.Members = {"TriggerAlg"};
TriggerAlg.mask = -1; // all bits on by default


// ----------------------------
//   Reconstruction
//
ApplicationMgr.DLLs +={ 
    "Recon",
    "CalRecon",
    "TkrRecon"
    };
Reconstruction.Members={ 
      "Sequencer/Cal1", 
      "Sequencer/Tkr",
      "Sequencer/Cal2",
      "Sequencer/Acd"
      };
         
ApplicationMgr.ExtSvc += {"RecoSvc"};

//          tracker
// -------------------------------------------
ApplicationMgr.ExtSvc   += { "TkrGeometrySvc"};
ApplicationMgr.ExtSvc   += { "TkrInitSvc"};

Cal1.Members = { 
      "CalXtalRecAlg", 
      "CalClustersAlg/first"
      };
Tkr.Members = {
      "TkrClusterAlg", 
      "TkrFindAlg", 
      "TkrReconAlg", 
      "TkrVertexAlg"
      };
Cal2.Members = {
      "CalClustersAlg/second"
      };

// ----------------------------
//   ACD recon
//
ApplicationMgr.DLLs += {"AcdRecon"};
Acd.Members = {"AcdReconAlg"};

// ----------------------------
//   Output
//
ApplicationMgr.DLLs +={ 
    "RootIo"
}; 
Output.Members += {"mcRootWriterAlg", "digiRootWriterAlg", "reconRootWriterAlg"};
mcRootWriterAlg.OutputLevel=3;
digiRootWriterAlg.OutputLevel=3;
reconRootWriterAlg.OutputLevel=3;
CalDigiAlg.OutputLevel=3;
ToolSvc.OnePlusExpTaper.OutputLevel=4;
 
// Set output level threshold (2=DEBUG, 3=INFO, 4=WARNING, 5=ERROR, 6=FATAL )
MessageSvc.OutputLevel = 2;

// for setting the run number
TriggerAlg.run=100;

//==============================================================
//
// End of job options file
//
//##############################################################

